一、
问题：因为入参数据写死，导致第二次请求数据重复，造成报错
解决思路：
1）保证每次请求的数据不重复；
2）保证每次请求前后都对数据进行还原。
其中，数据还原就UI自动化来说，有几种方式：
1.UI界面操作，即UI自动化；
2.通过接口请求；
3.直接数据库操作，即UI自动化测试中使用SQL语句操作数据库；
就企业微信UI自动化测试而言，第1种通过UI界面的方式进行数据还原不建议，通过界面操作本身就不太稳定，效率低；
第2种通过接口请求是可以考虑的，但在这个项目中通过企业微信提供的接口api不太好操作，如创建一个成员后需要进行
数据恢复，需要调用删除成员接口，但删除成员接口是需要userid的，但UI自动化测试的测试步骤完成后在前端界面可能
根本无法知道userid，这种情况下无法调用删除成员接口。不是有查询接口吗？不好意思，企业微信的接口api的查询成员
接口只有根据userid查询成员信息；
第3种方式在该项目中无法使用。
所以在该项目中为避免数据重复造成的报错，只能采用思路1的方法了，就是保证每次请求的数据不重复。

如何在测试用例方法中引入接口实现数据还原，且实现测试可重复执行
void updateMember(CaseObjectModel caseObject){
    //创建一个临时成员
    //分析：要想创建一个下面UI自动化可以使用的成员需要知道什么信息？
    //1）经分析，不可update的成员信息包括userid或acctid、企业邮箱；
    //2）要想在界面修改成员信息，需要在搜索框中输入acctid或username或手机号等用户信息，搜索后若结果唯一直接进到该成员的详情页，详情页点击编辑按钮即可编辑
    //所以需要创建一个临时成员后需要能够把该成员信息返回以便搜索
    //3）创建临时成员的方法addMember()如下
    member=addMember()
    //有了成员下面UI界面修改该成员信息
    在搜索框输入member.acctid
    点击编辑按钮
    根据caseObject修改成员信息
    点击保存按钮
    断言
    //删除上面创建的临时成员
}
成员信息结构体 addMember(){
    while(true){
        调用各种Random函数产生随机数，组成请求的json结构（必填参数填上即可）;
        调用接口请求参数发送请求
        判断是否添加成员成功？成功则退出循环：不成功继续添加
    }
    return 新增的成员(信息);
}
void deleteMember(){
    member=addMember();
    在搜索框输入member.acctid
    点击删除按钮
    断言
}
void searchMember(){
    member=addMember();
    在搜索框输入member.acctid;
    断言
}

ToDo:
1.环境清理（环境恢复）
2.引入日志
3.完善测试用例：用例数量、提供帮助创建用例的方法，如随机生成手机号
4.分布式并行测试
5.持续集成
