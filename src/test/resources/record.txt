一、
问题：因为入参数据写死，导致第二次请求数据重复，造成报错
解决思路：
1）保证每次请求的数据不重复；
2）保证每次请求前后都对数据进行还原。
其中，数据还原就UI自动化来说，有几种方式：
1.UI界面操作，即UI自动化；
2.通过接口请求；
3.直接数据库操作，即UI自动化测试中使用SQL语句操作数据库；
就企业微信UI自动化测试而言，第1种通过UI界面的方式进行数据还原不建议，通过界面操作本身就不太稳定，效率低；
第2种通过接口请求是可以考虑的，但在这个项目中通过企业微信提供的接口api不太好操作，如创建一个成员后需要进行
数据恢复，需要调用删除成员接口，但删除成员接口是需要userid的，但UI自动化测试的测试步骤完成后在前端界面可能
根本无法知道userid，这种情况下无法调用删除成员接口。不是有查询接口吗？不好意思，企业微信的接口api的查询成员
接口只有根据userid查询成员信息；
第3种方式在该项目中无法使用。
所以在该项目中为避免数据重复造成的报错，只能采用思路1的方法了，就是保证每次请求的数据不重复。

如何在测试用例方法中引入接口实现数据还原，且实现测试可重复执行
void updateMember(CaseObjectModel caseObject){
    //创建一个临时成员
    //分析：要想创建一个下面UI自动化可以使用的成员需要知道什么信息？
    //1）经分析，不可update的成员信息包括userid或acctid、企业邮箱；
    //2）要想在界面修改成员信息，需要在搜索框中输入acctid或username或手机号等用户信息，搜索后若结果唯一直接进到该成员的详情页，详情页点击编辑按钮即可编辑
    //所以需要创建一个临时成员后需要能够把该成员信息返回以便搜索
    //3）创建临时成员的方法addMember()如下
    member=addMember()
    //有了成员下面UI界面修改该成员信息
    在搜索框输入member.acctid，会自动跳转到该成员的详情页
    点击编辑按钮
    根据caseObject修改成员信息
    点击保存按钮
    断言
    //删除上面创建的临时成员
}
void updateMember2.0版本(CaseObjectModel caseObject){
    //涉及修改成员信息用例时，除了一定能修改成功的用例（这种情况可以用随机数解决），还要考虑修改不成功的情况，即修改成与已有成员信息相同，这里再分三种情况
    //1）除了手机号、alias邮箱（userid或acctid、企业邮箱在页面不能修改），其它修改成都与已有成员信息相同。2）手机号修改成与已有成员相同；3）alias邮箱修改成与现有成员相同
    //综上，updateMember应该有四个用例。那怎么编写自动化测试用例？下面是步骤设计
    //1、首先要明确一个已知所有信息的成员
    //2、yaml文件中写四个测试用例，四个用例说明如上
    //3、通过接口创建第一步所说的已知所有信息的成员，该步骤是为了创建一个为了updatecase已有的成员
    //4、通过接口创建一个信息为随机数的成员，通过修改该成员信息完成测试用例的执行，测试用例中包括把这个成员的信息改成和第三步创建的成员是一样的
    //5、执行修改流程ContactsPage.updateMember(第4步创建的成员的acctid，yaml中读取的修改数据)，修改的是第四步中创建的成员
    //6、通过接口删除第3步、第4步创建的成员；

}

成员信息结构体 addMember(){
    while(true){
        调用各种Random函数产生随机数，组成请求的json结构（必填参数填上即可）;
        调用接口请求参数发送请求
        判断是否添加成员成功？成功则退出循环：不成功继续添加
    }
    return 新增的成员(信息);
}
void deleteMember(){
    member=addMember();
    在搜索框输入member.acctid
    点击删除按钮
    断言
}
void searchMember(){
    member=addMember();
    在搜索框输入member.acctid;
    断言
}

ToDo:
1.环境清理（环境恢复）
2.引入日志
3.完善测试用例：用例数量、提供帮助创建用例的方法，如随机生成手机号
4.分布式并行测试
5.持续集成

日志框架参考文章：
1）log4j2 实际使用详解:（备注：该文章有一个问题实战部分第2步 ”配置log2.xml“ 文件名有误，应该是log4j2.xml，否则找不到该配置文件，具体说明参考下一篇文章）
https://monday.blog.csdn.net/article/details/71751835?spm=1001.2101.3001.6650.1&utm_medium=distribute.pc_relevant.none-task-blog-2%7Edefault%7ECTRLIST%7Edefault-1.pc_relevant_default&depth_1-utm_source=distribute.pc_relevant.none-task-blog-2%7Edefault%7ECTRLIST%7Edefault-1.pc_relevant_default&utm_relevant_index=2
2）Log4j2与Slf4j的最佳实践：https://zhuanlan.zhihu.com/p/36554554
上面第二篇文章的关注点：
Log4j2使用的几个点：
1.在Web项目中需要添加 log4j-web jar包。
2.Log4j允许使用log4jConfiguration参数在web.xml中指定配置文件位置。Log4j将通过以下方式搜索配置文件：
  1.如果配置了路径（log4jConfiguration参数配置），Log4j将去搜索这个位置。
  2.如果未配置路径，Log4j将搜索WEB-INF目录中“log4j2”开头的文件。如果找到多个文件，并且存在以“log4j2-name”开头的文件，其中name是Web应用程序的名称，则会使用它。否则，将使用第一个文件。
  3.在resources目录下搜索配置文件，规则同b。
3.Log4j2不支持Servlet 2.4及更老的的Web应用程序。
第2点讲的简单点就是：Log4j2的配置文件名以“log4j2”开头时（例如常见的log4j2.xml），放在WEB-INF和resources的根路径时不需要在web.xml中配置路径，放在其他位置时需要配置路径。




测试成员的编辑流程，修改完点击保存按钮，若修改成功保存按钮、取消按钮会消失。因此，我希望能够检查条目不存在。
不可使用TestCaseBase类中的isExist()方法来判断是否存在，因为该方法的逻辑就是用wait.until(ExpectedConditions.presenceOfElementLocated(定位符By))，
如果页面的取消按钮消失后，上面逻辑会等待5秒后抛出TimeoutException: Expected condition failed: waiting for presence of element located by: By.linkText: 取消 (tried for 5 second(s) with 500 milliseconds interval)
虽然这样做通过异常捕获可判断元素不存在，但时间会浪费5s且有异常抛出。还可以使用下面的方式：
new WebDriverWait(driver, 10).until(ExpectedConditions.invisibilityOfElementLocated(locator));
参考文章：https://www.it1352.com/968887.html

Selenium 中ExpectedConditions 用法说明（最全整理）
https://blog.csdn.net/qq_39704682/article/details/85596644


是否需要在用例的yaml文件中断言后增加断言后的操作？如导入文件，导入成功后会打开一个新页面，该页面有导入成功的提示信息和完成按钮，断言是否有导入成功提示信息，
断言后是否要点击完成按钮？按理最好断言后点击完成按钮，点击完成按钮后会跳回通信录页面。但这样会需要在yaml文件中增加一个断言后操作。现在暂时不需这样做，因为
当前在跑测试用例是都是从MainPage开始的，MainPage的每一个操作都是先open(URL)，会重新请求主页

cssSelector常用定位方法：https://www.cnblogs.com/ixtao/p/13412020.html

PartyPage中的添加部门流程中选择上级部门，由于选择部门是下拉选择且不是input标签，是否有办法做到部门选择的参数化？即在yaml文件中指定父部门。
思路：yaml中指定父部门名称，如销售部。先通过css Selector获取所有的部门列表List<WebElement>，再循环比较WebElement的innerHTML和yaml中指定的部门名称，
相同则匹配到，全都不匹配则父部门为id=1的部门。









